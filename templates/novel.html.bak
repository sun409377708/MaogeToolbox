<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>小说小帮手 - MaogeToolbox</title>
    <link href="{{ url_for('static', filename='main.css') }}" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
</head>
<body class="bg-gradient">
    <main class="main-container">
        <div class="tool-container">
            <div class="tool-header">
                <h1>小说小帮手</h1>
                <p class="subtitle">帮助您分析和改进文章的写作风格、情感和结构</p>
            </div>

            <!-- 文本输入区域 -->
            <div class="upload-area" id="textArea">
                <div class="text-content">
                    <textarea id="novelText" rows="8" 
                        class="text-input"
                        placeholder="请输入您要分析的文本..."></textarea>
                </div>
            </div>

            <!-- 分析按钮区域 -->
            <div class="settings-panel">
                <div class="settings-group">
                    <button onclick="analyzeStyle()" class="analyze-button">
                        <span class="button-icon">📝</span>
                        写作风格分析
                    </button>
                    <button onclick="analyzeSentiment()" class="analyze-button">
                        <span class="button-icon">❤️</span>
                        情感分析
                    </button>
                    <button onclick="analyzeStructure()" class="analyze-button">
                        <span class="button-icon">📊</span>
                        结构分析
                    </button>
                </div>
            </div>

            <!-- 分析结果区域 -->
            <div id="analysisResult" class="result-section hidden">
                <div id="styleAnalysis" class="result-card hidden">
                    <div class="result-header">
                        <h3>写作风格分析</h3>
                    </div>
                    <div class="result-content">
                    </div>
                </div>

                <div id="sentimentAnalysis" class="result-card hidden">
                    <div class="result-header">
                        <h3>情感分析</h3>
                    </div>
                    <div class="result-content">
                    </div>
                </div>

                <div id="structureAnalysis" class="result-card hidden">
                    <div class="result-header">
                        <h3>结构分析</h3>
                    </div>
                    <div class="result-content">
                    </div>
                </div>
            </div>
        </div>
    </main>

    <style>
    .text-input {
        width: 100%;
        min-height: 200px;
        padding: 1rem;
        border: 2px dashed #e5e7eb;
        border-radius: 0.5rem;
        background: white;
        font-size: 0.875rem;
        line-height: 1.5;
        resize: vertical;
        transition: border-color 0.2s;
    }

    .text-input:hover {
        border-color: #9ca3af;
    }

    .text-input:focus {
        outline: none;
        border-color: #4f46e5;
        box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
    }

    /* Markdown 样式 */
    .markdown-content {
        line-height: 1.6;
        color: #374151;
    }

    .markdown-content h1,
    .markdown-content h2,
    .markdown-content h3,
    .markdown-content h4 {
        margin-top: 1.5em;
        margin-bottom: 0.5em;
        font-weight: 600;
        color: #111827;
    }

    .markdown-content p {
        margin: 1em 0;
    }

    .markdown-content ul,
    .markdown-content ol {
        margin: 1em 0;
        padding-left: 2em;
    }

    .markdown-content li {
        margin: 0.5em 0;
    }

    .markdown-content blockquote {
        margin: 1em 0;
        padding-left: 1em;
        border-left: 4px solid #e5e7eb;
        color: #6b7280;
    }

    .markdown-content code {
        padding: 0.2em 0.4em;
        background-color: #f3f4f6;
        border-radius: 0.25em;
        font-size: 0.875em;
        color: #ef4444;
    }

    .markdown-content pre {
        margin: 1em 0;
        padding: 1em;
        background-color: #f3f4f6;
        border-radius: 0.5em;
        overflow-x: auto;
    }

    .markdown-content pre code {
        padding: 0;
        background-color: transparent;
        color: inherit;
    }

    .settings-group {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        justify-content: center;
        margin: 1rem 0;
    }

    .analyze-button {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.5rem;
        background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
        color: white;
        border: none;
        border-radius: 0.5rem;
        font-weight: 500;
        cursor: pointer;
        transition: transform 0.2s, box-shadow 0.2s;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .analyze-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15);
    }

    .analyze-button:active {
        transform: translateY(0);
    }

    .button-icon {
        font-size: 1.25rem;
    }

    .result-section {
        margin-top: 1.5rem;
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .result-card {
        background: white;
        border-radius: 0.5rem;
        overflow: hidden;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

    .result-header {
        background: #f9fafb;
        padding: 0.75rem 1rem;
        border-bottom: 1px solid #e5e7eb;
    }

    .result-header h3 {
        margin: 0;
        font-size: 0.875rem;
        font-weight: 500;
        color: #374151;
    }

    .result-content {
        padding: 1rem;
    }
    </style>

    <script>
        function showLoading(elementId) {
            const element = document.getElementById(elementId);
            element.classList.remove('hidden');
            element.querySelector('.result-content').innerHTML = '<p>分析中，请稍候...</p>';
        }

        function showResult(elementId, result) {
            const element = document.getElementById(elementId);
            element.classList.remove('hidden');
            element.querySelector('.result-content').innerHTML = `<p>${result}</p>`;
        }

        async function analyzeStyle() {
            const text = document.getElementById('novelText').value;
            if (!text) {
                alert('请输入要分析的文本');
                return;
            }

            showLoading('styleAnalysis');
            document.getElementById('analysisResult').classList.remove('hidden');

            try {
                const response = await fetch('/api/analyze-style', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ text: text })
                });

                const data = await response.json();
                if (data.error) {
                    throw new Error(data.error);
                }
                showResult('styleAnalysis', data.result);
            } catch (error) {
                showResult('styleAnalysis', `分析出错：${error.message}`);
            }
        }

        async function analyzeSentiment() {
            const text = document.getElementById('novelText').value;
            if (!text) {
                alert('请输入要分析的文本');
                return;
            }

            showLoading('sentimentAnalysis');
            document.getElementById('analysisResult').classList.remove('hidden');

            try {
                const response = await fetch('/api/analyze-sentiment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ text: text })
                });

                const data = await response.json();
                if (data.error) {
                    throw new Error(data.error);
                }
                showResult('sentimentAnalysis', data.result);
            } catch (error) {
                showResult('sentimentAnalysis', `分析出错：${error.message}`);
            }
        }

        async function analyzeStructure() {
            const text = document.getElementById('novelText').value;
            if (!text) {
                alert('请输入要分析的文本');
                return;
            }

            showLoading('structureAnalysis');
            document.getElementById('analysisResult').classList.remove('hidden');

            try {
                const response = await fetch('/api/analyze-structure', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ text: text })
                });

                const data = await response.json();
                if (data.error) {
                    throw new Error(data.error);
                }
                showResult('structureAnalysis', data.result);
            } catch (error) {
                showResult('structureAnalysis', `分析出错：${error.message}`);
            }
        }
    </script>
</body>
</html>
